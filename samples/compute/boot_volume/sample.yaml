---
# Copyright (c) 2020, 2022 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.

- name: Create a new Boot Volume from an existing instance
  hosts: localhost
  collections:
    - oracle.oci
  vars:
    # common networking definitions
    quad_zero_route: "0.0.0.0/0"
    TCP_protocol: "6"
    SSH_port: "22"

    vcn_name: "samplebootvolumevcn"
    vcn_cidr_block: "10.0.0.0/16"
    vcn_dns_label: "testvcnbv"

    ig_name: "igforsamplebootvolumevcn"

    route_table_name: "samplebootvolumeroutetable"
    # route all internet access to our Internet Gateway
    route_table_rules:
      - cidr_block: "{{ quad_zero_route }}"
        network_entity_id: "{{ ig_id }}"


    subnet_cidr: "10.0.0.48/28"
    subnet_name: "samplebootvolumesubnet"
    subnet_dns_label: "testsubnetbv"

    securitylist_name: "samplebootvolumesecuritylist"

    instance_name: "samplebootvolumeinstance"
    instance_shape: "{{ lookup('env', 'SAMPLE_INSTANCE_SHAPE') | default('VM.Standard2.1', true) }}"
    instance_hostname: "testinstancebv"

    bootvolume_name: "samplebootvolume"

    #########################################
    # Tenancy specific configuration
    # *Note* - Override the following variables based on your tenancy
    # or set a valid value for the corresponding environment variable
    #########################################
    instance_ad: "{{ lookup('env', 'SAMPLE_AD_NAME') }}"
    instance_compartment: "{{ lookup('env', 'SAMPLE_COMPARTMENT_OCID') }}"
    # provide an OL image
    instance_image: "{{ lookup('env', 'SAMPLE_IMAGE_OCID') }}"

  tasks:
    - block:
        - import_tasks: setup.yaml

        #==========================================================================================

        - name: Get Boot Volume id from an existing instance
          oci_compute_boot_volume_attachment_facts:
            availability_domain: "{{ instance_ad }}"
            compartment_id: "{{ instance_compartment }}"
            instance_id: "{{ instance_id }}"
          register: result
        - set_fact:
            boot_volume_id: "{{ result.boot_volume_attachments[0].boot_volume_id }}"

        #==========================================================================================

        - name: Create boot volume backup
          oci_blockstorage_boot_volume_backup:
            boot_volume_id: "{{ boot_volume_id }}"
            compartment_id: "{{ instance_compartment }}"
          register: result
        - set_fact:
            boot_volume_backup_id: "{{ result.boot_volume_backup.id }}"

        #==========================================================================================

        - name: Create new boot volume with optional + required parameters
          oci_blockstorage_boot_volume:
            availability_domain: "{{ instance_ad }}"
            compartment_id: "{{ instance_compartment }}"
            display_name: "{{ bootvolume_name }}"
            source_details:
              type: bootVolumeBackup
              id: "{{ boot_volume_backup_id }}"
          register: result

        - name: Print BootVolume details
          debug:
            msg: "Created a new BootVolume {{ result }}"
        - set_fact:
            new_boot_volume_id: "{{ result.boot_volume.id }}"

        #==========================================================================================      

        - import_tasks: teardown.yaml

      rescue:
        - import_tasks: teardown.yaml
          ignore_errors: yes

        - fail:
            msg: "{{ ansible_failed_result }}"